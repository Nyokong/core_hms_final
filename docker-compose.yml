

services:
# CI/CD
  django:
    container_name: hms_core
    build: 
      context: ./core
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    # command: daphne -b 0.0.0.0:8000 core.asgi:application
    # command: uvicorn core.asgi:application --port 8000 --log-level debug --reload
    volumes: 
      - ./core:/usr/src/app/
      - ./staticfiles:/code/staticfiles
    ports:
      - 8000:8000
    env_file:
      - core/.env
    depends_on:
      - redis
      - db
    environment: 
      - DEBUG=1
      - SECRET_KEY=django-insecure-oe2s8g*4lnepk$cn6%+(78a$d&*(f&9%&u!!%jyrp)d1!ihg#*
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgres://gitgang_postgres:gitgang_postgres@db:5432/gitgang_postgres

  # daphne:
  #   image: fundanie/daphne
  #   command: ["daphne", "-b", "0.0.0.0:8000", "core.asgi:application"]
  #   volumes:
  #     - ./core:/app

      

  celery:
    build: 
      context: ./core
    command: celery -A core worker -l INFO
    volumes: 
      - ./core:/usr/src/app/
    environment: 
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/1
      - DATABASE_URL=postgres://gitgang_postgres:gitgang_postgres@db:5432/gitgang_postgres
    depends_on:
      - redis
      - db 
    
  db:
    restart: always
    image: postgres:16.3-alpine3.20
    container_name: hms_db
    env_file:
      - core/.env
    environment:
      POSTGRES_DB: gitgang_postgres
      POSTGRES_USER: gitgang_postgres
      POSTGRES_PASSWORD: gitgang_postgres
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data/
      # - ./postgres/scripts:/docker-entrypoint-initdb.d

  redis:
    image: redis:7.4.0-alpine
    container_name: redis
    # command: redis-server /path/to/your/redis.conf
    ports:
      - "6379:6379"

volumes:
  dbdata:


